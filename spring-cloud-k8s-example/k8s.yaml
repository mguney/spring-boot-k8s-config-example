kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: spring-cloud-k8s-role
rules:
  - apiGroups: ["", "extensions", "apps"]
    resources: ["configmaps", "pods", "services", "secrets"]
    verbs: ["get", "list", "watch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spring-cloud-k8s-role-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: default
    apiGroup: ""
roleRef:
  kind: Role
  name: spring-cloud-k8s-role
  apiGroup: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-cloud-k8s
spec:
  selector:
    matchLabels:
      app: spring-cloud-k8s
  replicas: 1
  template:
    metadata:
      labels:
        app: spring-cloud-k8s
    spec:
      containers:
        - name: springkubernetes
          image: springkubernetes
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: prod

---
kind: Service
apiVersion: v1
metadata:
  name: spring-cloud-k8s
spec:
  selector:
    app: spring-cloud-k8s
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-cloud-k8s-configmap
data:
  app.config1: "prod_config1"
---
apiVersion: v1
kind: Secret
metadata:
  name: spring-cloud-k8s-secret
data:
  app.secret1: cHJvZF9zZWNyZXQx
type: Opaque